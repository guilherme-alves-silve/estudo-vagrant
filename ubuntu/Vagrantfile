$script_mysql = <<-SCRIPT
  apt-get update && \
  apt-get install -y mysql-server-5.7 && \
  mysql -e "CREATE USER 'phpuser'@'%' IDENTIFIED BY 'pass';"
SCRIPT

$script_puppet = <<-SCRIPT
  apt-get update && \
  apt-get install -y puppet && \
  cp /vagrant/configs/manifests/phpweb.pp /home/vagrant/phpweb.pp
SCRIPT

$script_ansible = <<-SCRIPT
  cp /vagrant/id_bionic /home/vagrant && \
  chmod 600 /home/vagrant/id_bionic && \
  chown vagrant:vagrant /home/vagrant/id_bionic && \
  apt-get update && \
  apt-get install -y software-properties-common && \
  apt-add-repository --yes --update ppa:ansible/ansible && \
  apt-get install -y ansible && \
  ansible-playbook -i /vagrant/configs/ansible/hosts /vagrant/configs/ansible/playbook.yml
SCRIPT

$script_dockerhost = <<-SCRIPT
  apt-get update && \ 
  apt-get install -y docker.io
SCRIPT

Vagrant.configure("2") do |config|

  config.vm.box = "ubuntu/bionic64" 

  config.vm.provider "virtualbox" do |vb|
    vb.memory = 512
    vb.cpus = 1
  end

  config.vm.define "mysqldb" do |mysql|
    mysql.vm.network "forwarded_port", guest: 80, host: 8080
    mysql.vm.network "private_network", ip: "192.168.50.4"
    mysql.vm.provision "shell", inline: "cat /vagrant/configs/id_bionic.pub >> .ssh/authorized_keys"
    mysql.vm.provision "shell", inline: $script_mysql
    mysql.vm.provision "shell", inline: "cat /vagrant/configs/mysqld.cnf > /etc/mysql/mysql.conf.d/mysqld.cnf"
    mysql.vm.provision "shell", inline: "service mysql restart"
    #If you want to make the ./configs be in the root too
    #mysql.vm.synced_folder "./configs", "/configs"
    #If you want to disable the vagrant in the root folder
    #mysql.vm.synced_folder ".", "/vagrant", disabled: true
    #If you want to configure the VM to use DHCP
    #mysql.vm.network "private_network", type: "dhcp"
  end

  config.vm.define "phpweb" do |phpweb|
    phpweb.vm.network "forwarded_port", guest: 8888, host: 8888
    #If you want to make public
    #phpweb.vm.network "public_network", ip: "192.168.50.5"
    phpweb.vm.network "private_network", ip: "192.168.50.5"
    phpweb.vm.provision "shell", inline: $script_puppet

    phpweb.vm.provision "puppet" do |puppet| 
      #The manifests_path must be the location of the host machine
      puppet.manifests_path = "./configs/manifests"	
      puppet.manifest_file = "phpweb.pp"
    end

    phpweb.vm.provider "virtualbox" do |vb|
      vb.name = "phpweb_vm"
    end
  end

  config.vm.define "mysqlserver" do |mysqlserver|
    mysqlserver.vm.network "forwarded_port", guest: 80, host: 8081
    mysqlserver.vm.network "private_network", ip: "192.168.50.6"
    mysqlserver.vm.provision "shell", inline: "cat /vagrant/configs/id_bionic.pub >> .ssh/authorized_keys"
  end

  config.vm.define "ansible" do |ansible|
  	ansible.vm.network "private_network", ip: "192.168.50.7"
  	#The ansible needs the access to the private key
  	ansible.vm.provision "shell", inline: $script_ansible
  end

  config.vm.define "memcached" do |memcached|
    memcached.vm.box = "centos/7"
    memcached.vm.provider "virtualbox" do |vb|
      vb.memory = 512
      vb.cpus = 1
      vb.name = "memcached_vm"
    end
  end

  config.vm.define "dockerhost" do |dockerhost|

    dockerhost.vm.provision "shell", inline: $script_dockerhost

    dockerhost.vm.provider "virtualbox" do |vb|
      vb.memory = 512
      vb.cpus = 1
      vb.name = "dockerhost_vm"
    end
  end

end
